class String
{
	pulic:
		String(char* str)
		{
			if(str == nullptr)
				str = "";
			_str = new char[strlen(str)+1];
			strcpy(_str,str); 
		}
		String(const String& s)
		:_str(new char[strlen(s._str)+1])
		{
			strcpy(_str,s._str);
		}
		String(String&& s)
		:_str(nullptr)
		{
			swap(_str,s._str);
		}
		String& operator=(const String& s)
		{
			if(this != &s)
			{
				char* pTemp = new char[strlen(s._str)+1];
				strcpy(pTemp,s._str);
				delete[] _str;
				_str = pTemp;
			}
			return *this;
		 } 
		 String& operator=(String&& s)
		 {
		 	swap(_str,s._str);
		 }
		 String operator+(const String& s)
		 {
		 	String tmp(*this);
		 	tmp.append(s._str);
		 	return tmp;
		 }
		 ~String()
		 {
		 	if(_str)
		 	delete[] _str;
		 }
		 
	private:
		char* _str;
 }; 

